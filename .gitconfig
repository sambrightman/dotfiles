[alias]
	a = add
	ac = !git a . && git cm
	ai = add --interactive
	ap = add --patch
	at = !"append_ticket() { if [ $# -gt 0 ]; then git ca -m \"$1 $(git lgs)\n\n$(git lgb)\"; else echo 'supply some ticket(s) to prepend to the summary'; fi; }; append_ticket"
	br = branch -vv
	brav = branch --all -vv
	ca = commit --amend
	ce = config --global --edit
	co = checkout
	cob = checkout -b
	ci = commit
	cm = commit -m
	cia = commit -C HEAD@{1}
	ciae = commit -c HEAD@{1}
	dc = diff --cached
	du = !git diff --pretty=authoneline --reverse $(git ub)..
	fu = commit --amend --no-edit
	lg = log --pretty=authoneline
	lga = log -n1 HEAD@{1}
	lgf = log --pretty=authonelinefull
	lgs = !"log_summary() { git log -n1 --format=%s HEAD~${1:-0}; }; log_summary"
	lgb = !"log_body() { git log -n1 --format=%b HEAD~${1:-0}; }; log_body"
	lgi = !git log --pretty=authoneline ..$(git ub)
	lgu = !git log --pretty=authoneline --reverse $(git ub)..
	pp = !"git lgu; echo; git du --stat"
	pr = pull --rebase
	ra = rebase --abort
	rb = rebase
	rc = rebase --continue
	rs = rebase --skip
	ri = rebase --interactive
	rl = reflog --pretty=refonelinefull
	rsh = reset HEAD
	rsa = reset --hard
	rsp = reset --patch
	rss = reset --soft
	rso = remote show origin
	sl = stash list --pretty=stashoneline
	sp = stash pop
	ss = stash show -p
	st = status
	bb = !echo $(git cb)_bb
	cb = rev-parse --abbrev-ref HEAD
	ub = rev-parse --abbrev-ref --symbolic-full-name @{u}
	qb = !git br $(git bb)
	qd = !git br -D $(git bb)
	db = !git diff $(git bb)
	name = show --name-only
	graph = log --graph --all --pretty=graphtight --abbrev-commit --date=relative
	biggraph = log --graph --all --pretty=graphloose --abbrev-commit
	tagdates = log --tags --simplify-by-decoration --pretty=\"format:%ci %d\"
	conflicts = diff --name-only --diff-filter=U
	contains = branch -a --contains
	alias = !"some_filter() { if [ $# -gt 0 ]; then grep $*; else cat; fi; }; git config --list | grep alias | some_filter"
[pretty]
	graphtight = %C(bold red)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)- %an%C(reset)%C(bold yellow)%d%C(reset)
	graphloose = %C(bold red)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n          %C(white)%s%C(reset) %C(bold white)- %an%C(reset)
	authoneline = %C(bold red)%h %C(reset)%s %C(bold green)%aN %C(bold magenta)(%ar)%C(reset)%C(yellow)%d%C(reset)
	authonelinefull = %C(bold red)%h %C(reset)%s %C(bold green)%aN %C(bold magenta)(%aD)%C(reset)%C(yellow)%d%C(reset)
	stashoneline = %C(bold red)%h %C(bold green)%gd %C(reset)%s %C(bold green)%aN %C(bold magenta)(%ar)%C(reset)%C(yellow)%d%C(reset)
	refonelinefull = %C(auto)%h %gd: %gs %C(bold magenta)(%aD)%C(reset)
[user]
	name = Sam Brightman
	# email from include
[core]
#	editor = emacsclient -q -a \\\"\\\" -t
	editor = emacs
[color]
	ui = true
[pager]
	blame = less -S
[push]
	default = simple
[pull]
	rebase = true
[branch]
	autosetupmerge = always
[credential]
	helper = osxkeychain
[credential "https://github.com"]
	username = sambrightman
[rebase]
	autosquash = true
	autostash = true
[include]
	path = .gitconfig_user
